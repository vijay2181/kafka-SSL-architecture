take 3 t2.medium instances which are amazon-linux flavoured

SERVER1: ZOOKEEPER1, KAFKA1
SERVER1: ZOOKEEPER2, KAFKA2
SERVER1: ZOOKEEPER3, KAFKA3

allow 22,80,2181,2888-3888,9092-9093 ports


- in 3.0.0 or above kafka version, zookeeper comes by default
Apache Kafka depends on Zookeeper for cluster management. Hence, prior to starting Kafka, Zookeeper has to be started. There is no need to explicitly install Zookeeper, as it comes included with Apache Kafka.
- during coming days in 4.0.0 versions, there is no need of zookeeper

- download kafka from official page


IP ADDRESSES:
=============
SERVER1 35.90.113.2543
SERVER2 52.43.209.2403
SERVER3 54.187.78.1003

INSTALL ZOOKEEPER:
==================
IN SERVER1:-
============
cd /home/ec2-user
sudo yum install java-11-amazon-corretto-headless -y
wget https://downloads.apache.org/kafka/3.5.1/kafka_2.13-3.5.1.tgz
tar -xvf kafka_2.13-3.5.1.tgz
mkdir zookeeper
mkdir kafka-logs
cp -r  kafka_2.13-3.5.1/config/zookeeper.properties kafka_2.13-3.5.1/config/zookeeper.properties-bkp

vi /home/ec2-user/zookeeper/myid
1

vi kafka_2.13-3.5.1/config/zookeeper.properties
tickTime=2000
initLimit=10
syncLimit=5
clientPort=2181
dataDir=/home/ec2-user/zookeeper
maxClientCnxns=60
autopurge.snapRetainCount=3
autopurge.purgeInterval=1
4lw.commands.whitelist=*
server.1=0.0.0.0:2888:3888
server.2=52.43.209.2403:2888:3888
server.3=54.187.78.1003:2888:3888


IN SERVER2:-
=============
cd /home/ec2-user
sudo yum install java-11-amazon-corretto-headless -y
wget https://downloads.apache.org/kafka/3.5.1/kafka_2.13-3.5.1.tgz
tar -xvf kafka_2.13-3.5.1.tgz
mkdir zookeeper
cp -r  kafka_2.13-3.5.1/config/zookeeper.properties kafka_2.13-3.5.1/config/zookeeper.properties-bkp

vi /home/ec2-user/zookeeper/myid
2

vi kafka_2.13-3.5.1/config/zookeeper.properties
tickTime=2000
initLimit=10
syncLimit=5
clientPort=2181
dataDir=/home/ec2-user/zookeeper
maxClientCnxns=60
autopurge.snapRetainCount=3
autopurge.purgeInterval=1
4lw.commands.whitelist=*
server.1=35.90.113.2543:2888:3888
server.2=0.0.0.0:2888:3888
server.3=54.187.78.1003:2888:3888



IN SERVER3:
===========
cd /home/ec2-user
sudo yum install java-11-amazon-corretto-headless -y
wget https://downloads.apache.org/kafka/3.5.1/kafka_2.13-3.5.1.tgz
tar -xvf kafka_2.13-3.5.1.tgz
mkdir zookeeper
cp -r  kafka_2.13-3.5.1/config/zookeeper.properties kafka_2.13-3.5.1/config/zookeeper.properties-bkp

vi /home/ec2-user/zookeeper/myid
3

vi kafka_2.13-3.5.1/config/zookeeper.properties
tickTime=2000
initLimit=10
syncLimit=5
clientPort=2181
dataDir=/home/ec2-user/zookeeper
maxClientCnxns=60
autopurge.snapRetainCount=3
autopurge.purgeInterval=1
4lw.commands.whitelist=*
server.1=35.90.113.2543:2888:3888
server.2=52.43.209.2403:2888:3888
server.3=0.0.0.0:2888:3888



START ZOOKEEPER
===============
start zookeeper in all SERVER1,SERVER2,SERVER3 instances at once

cd kafka_2.13-3.5.1/bin
/home/ec2-user/kafka_2.13-3.5.1/bin/zookeeper-server-start.sh /home/ec2-user/kafka_2.13-3.5.1/config/zookeeper.properties 
the above command starts zookeeper in foreground, if you want to start in background, then use -daemon

/home/ec2-user/kafka_2.13-3.5.1/bin/zookeeper-server-start.sh -daemon /home/ec2-user/kafka_2.13-3.5.1/config/zookeeper.properties 

/home/ec2-user/kafka_2.13-3.5.1/bin/zookeeper-server-stop.sh -daemon /home/ec2-user/kafka_2.13-3.5.1/config/zookeeper.properties


ZOOKEEPER LOGS:
===============
zookeeper logs will be found in 
/home/ec2-user/kafka_2.13-3.5.1/logs
tail -f /home/ec2-user/kafka_2.13-3.5.1/logs/zookeeper.out
tail -f -n 100 /home/ec2-user/kafka_2.13-3.5.1/logs/zookeeper.out
ps -ef | grep zookeeper
netstat -tulpn | grep LISTEN
sudo yum install nc -y
echo stat | nc localhost 2181
- above command 'stat' which is 4 letter(4lw.commands.whitelist=*) is removed from whitelist, but by default they are whitelisted for security reasons.


KAFKA CONFIGURATION:
=====================

KAFKA1:
-------
cp -r /home/ec2-user/kafka_2.13-3.5.1/config/server.properties /home/ec2-user/kafka_2.13-3.5.1/config/server.properties-bkp
vi /home/ec2-user/kafka_2.13-3.5.1/config/server.properties
broker.id=1
advertised.listeners=PLAINTEXT://35.90.113.2543:9092
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs=/home/ec2-user/kafka-logs
num.partitions=8
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
log.retention.hours=168
log.retention.check.interval.ms=300000
advertised.host.name=localhost
zookeeper.connect=35.90.113.2543:2181,52.43.209.2403:2181,54.187.78.1003:2181
zookeeper.connection.timeout.ms=18000
group.initial.rebalance.delay.ms=0


KAFKA2:
-------
cp -r /home/ec2-user/kafka_2.13-3.5.1/config/server.properties /home/ec2-user/kafka_2.13-3.5.1/config/server.properties-bkp
vi /home/ec2-user/kafka_2.13-3.5.1/config/server.properties
broker.id=2
advertised.listeners=PLAINTEXT://52.43.209.2403:9092
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs=/home/ec2-user/kafka-logs
num.partitions=8
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
log.retention.hours=168
log.retention.check.interval.ms=300000
advertised.host.name=localhost
zookeeper.connect=35.90.113.2543:2181,52.43.209.2403:2181,54.187.78.1003:2181
zookeeper.connection.timeout.ms=18000
group.initial.rebalance.delay.ms=0


KAFKA3:
-------
cp -r /home/ec2-user/kafka_2.13-3.5.1/config/server.properties /home/ec2-user/kafka_2.13-3.5.1/config/server.properties-bkp
vi /home/ec2-user/kafka_2.13-3.5.1/config/server.properties
broker.id=3
advertised.listeners=PLAINTEXT://54.187.78.1003:9092
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs=/home/ec2-user/kafka-logs
num.partitions=8
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
log.retention.hours=168
log.retention.check.interval.ms=300000
advertised.host.name=localhost
zookeeper.connect=35.90.113.2543:2181,52.43.209.2403:2181,54.187.78.1003:2181
zookeeper.connection.timeout.ms=18000
group.initial.rebalance.delay.ms=0


START KAFKA:-
=============
start kafka in all SERVER1,SERVER2,SERVER3 instances at once

/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-server-start.sh /home/ec2-user/kafka_2.13-3.5.1/config/server.properties

/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-server-start.sh -daemon /home/ec2-user/kafka_2.13-3.5.1/config/server.properties

KAFKA LOGS:-
============
tail -f -n 100 /home/ec2-user/kafka_2.13-3.5.1/logs/server.log

[2023-07-30 18:25:45,935] INFO [KafkaServer id=0] started (kafka.server.KafkaServer)
[2023-07-30 18:25:46,149] INFO [zk-broker-0-to-controller-forwarding-channel-manager]: Recorded new controller, from now on will use node localhost:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2023-07-30 18:25:46,150] INFO [zk-broker-0-to-controller-alter-partition-channel-manager]: Recorded new controller, from now on will use node localhost:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)


[ec2-user@kafka1 logs]$ echo dump | nc localhost 2181 | grep brokers
        /brokers/ids/1
        /brokers/ids/2
        /brokers/ids/3

/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-server-stop.sh /home/ec2-user/kafka_2.13-3.5.1/config/server.properties



ZOOKEEPER AND KAFKA AS SERVICE:-
================================
execute in all 3 SERVER1,SERVER2,SERVER3 servers

ZOOKEEPER:
----------
sudo vi /etc/systemd/system/zookeeper.service
[Unit]
Description=Apache ZooKeeper
Documentation=http://zookeeper.apache.org
Requires=network.target remote-fs.target
After=network.target remote-fs.target
[Service]
Type=simple
User=ec2-user
Group=ec2-user
ExecStart=/home/ec2-user/kafka_2.13-3.5.1/bin/zookeeper-server-start.sh /home/ec2-user/kafka_2.13-3.5.1/config/zookeeper.properties
ExecStop=/home/ec2-user/kafka_2.13-3.5.1/bin/zookeeper-server-stop.sh
Restart=on-failure
RestartSec=5s
[Install]
WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl enable zookeeper
sudo systemctl start zookeeper
sudo systemctl status zookeeper
sudo systemctl stop zookeeper

KAFKA:
------
sudo vi /etc/systemd/system/kafka.service
[Unit]
Description=Apache Kafka
Documentation=http://kafka.apache.org
Requires=zookeeper.service
After=zookeeper.service
[Service]
Type=simple
User=ec2-user
Group=ec2-user
ExecStart=/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-server-start.sh /home/ec2-user/kafka_2.13-3.5.1/config/server.properties
# Uncomment the following line if you want Kafka to run as a background (daemon) process
# ExecStart=/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-server-start.sh -daemon /home/ec2-user/kafka_2.13-3.5.1/config/server.properties
ExecStop=/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-server-stop.sh
Restart=on-failure
RestartSec=5s
[Install]
WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl enable kafka
sudo systemctl start kafka
sudo systemctl status kafka
sudo systemctl stop kafka


###################################################################################################################################################################
PRODUCER,CONSUMER,CONSUMER GROUPS:-
===================================
IN SERVER1:
===========
topic creation:-
----------------

/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-topics.sh --bootstrap-server localhost:9092 --topic myTopic --create --partitions 1 --replication-factor 1

[ec2-user@kafka1 system]$ /home/ec2-user/kafka_2.13-3.5.1/bin/kafka-topics.sh --bootstrap-server localhost:9092 --topic myTopic --create --partitions 1 --replication-factor 1
Created topic myTopic.


IN SERVER2:-
============
/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list

[ec2-user@kafka2 ~]$ /home/ec2-user/kafka_2.13-3.5.1/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list
myTopic

IN SERVER3:-
============
/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic myTopic

[ec2-user@kafka3 ~]$ /home/ec2-user/kafka_2.13-3.5.1/bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic myTopic
Topic: myTopic  TopicId: F7X8QcVWTn6OMJW1VWS17A PartitionCount: 1       ReplicationFactor: 1    Configs: 
        Topic: myTopic  Partition: 0    Leader: 1       Replicas: 1     Isr: 1


producer:-
----------
/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-console-producer.sh --bootstrap-server localhost:9092 --topic myTopic


consumer:-
----------
/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic myTopic --from-beginning

/home/ec2-user/kafka_2.13-3.5.1/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic myTopic



#############################################################################################################################################################
